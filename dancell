#!/usr/bin/bash

# DAFTAR LINK SERVER
    ip=192.168.0.111
    ssh=0.tcp.ap.ngrok.io
    pssh=12090
    tcp=0.tcp.ap.ngrok.io:13331
    p5555=5555

#Warna
    R="$(printf '\033[1;31m')"
    G="$(printf '\033[1;32m')"
    Y="$(printf '\033[1;33m')"
    B="$(printf '\033[1;34m')"
    C="$(printf '\033[1;36m')"
    W="$(printf '\033[1;37m')" 
    Q="$(printf '#00FF0A')"

# command
    temp=$(adb shell dumpsys battery | grep temperatur)
    merk=$(adb shell getprop ro.product.manufacturer)
    model=$(adb shell getprop ro.product.model)
    seri=$(adb shell getprop ro.build.version.release)
    sdk=$(adb shell getprop ro.build.version.sdk)
    # IP
    lanip=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/')
    target=$(adb shell ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1 -d'/')

    battery=$(adb shell dumpsys battery | grep level)
    charging=$(adb shell dumpsys battery | grep AC)
    path=/usr/bin/dancell
    name='dancell'
    clear
function info () {
    echo -e $Y "     ╔────────────────────────────────────╗ "
    echo -e $Y "           $G      DEVICES INFO      $Y     "
    echo -e $Y "     ┖────────────────────────────────────┙ "
    echo -e $R "        Suhu               = "$temp
    echo -e $R "        IP                 = "$target
    echo -e $G "        BRAND              = "$merk
    echo -e $Y "        MODEL              = "$model
    echo -e $B "        SERI               = "$seri 
    echo -e $W "        SDK VERSION        = "$sdk
    echo -e $C "        BATTERY            = "$battery
    echo -e $G "	 Charging           = "$charging
    echo -e $Y "     ┖────────────────────────────────────┙ "
    }
function menu () {
    back=$path
    bash $back
    }
function LINUX () {
    echo -e $G "  
                   $G      LINUX       
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $Y $charging      $C  Battery  = $battery            
    |------------------------------------------------------|                  
     $W LHOST = $lanip   $R  Connected = $target  $G 
    ┖──────────────────────────────────────────────────────┙
    
    1. App Wajib
    2. Install scrcpy
    3. Install wine
    4. Install zphisher  
    5. Install Google chrome
    6. Download Ngrok & Cloudflare
    "
    }
function header () {
    echo -e $G "  
                   $G      SERVER     $Y  $temp $B
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $Y $charging      $C  Battery  = $battery            
    |------------------------------------------------------|                  
     $W LHOST = $lanip   $R  Connected = $target  $G 
    ┖──────────────────────────────────────────────────────┙
    
    1. SERVER 
    2. ADB MODE
    3. FASTBOOT MODE
    4. LINUX 
    5. PHISHING    
    $Y
    "
 }
function home () {
    echo -e $C "
                  $Y     HOME SERVER $temp
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $W $charging      $C  Battery  = $battery               
    |------------------------------------------------------|                  
     $G LHOST = $lanip   $R  Connected = $target    $C 
    ┖──────────────────────────────────────────────────────┙            
    
    1. IP
    2. ngrok
    3. ADB ( IP )
    4. ADB ( ngrok )
    
    $R
    Press any key back to MENU ......$Y
    "
 }

function adbmenu () {
    echo -e $B" 
                        MODE ADB   $temp
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $W $charging      $C  Battery  = $battery               
    |------------------------------------------------------|                  
     $G LHOST = $lanip   $R  Connected = $target    $C 
    ┖──────────────────────────────────────────────────────┙    
    
    1. Info Devices
    2. ADB wifi
    3. 
    4. Backup Foto (Camera) 
    5. Scrcpy
    6. ADB kill-server
    
    $R 
    Press any key back to MENU ......$Y
    "  
    }

function fastmode () {
    echo -e $G "  
                   $G      FASTBOOT MODE      
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $Y $charging      $C  Battery  = $battery            
    |------------------------------------------------------|                  
     $W LHOST = $lanip   $R  Connected = $target  $G 
    ┖──────────────────────────────────────────────────────┙
    
    1.  
    2. 
    3.      
    $Y
    "
    }

function PHISHING () {
    echo -e $G "  
                   $G      SERVER     $Y  $temp $B
    |======================================================|
    ╔──────────────────────────────────────────────────────╗
     $Y $charging      $C  Battery  = $battery            
    |------------------------------------------------------|                  
     $W LHOST = $lanip   $R  Connected = $target  $G 
    ┖──────────────────────────────────────────────────────┙
    
    1. Zphisher
    2.
    3.
    4.
    5.   
    $Y
    "
 }

function back () {
    echo -e $R "


                    ╔────────────────────────────────────╗
                    |          $R YOUR BRAIN ERROR  $Y       |
                    |             BACK TO MENU           |  
                    ┖────────────────────────────────────┙ 
            
            "
 }
function kosong () {
    echo -e $R "


                    ╔────────────────────────────────────╗
                    |          $R YOUR BRAIN ERROR  $Y       |
                    |        Halaman belum di buat       |  
                    ┖────────────────────────────────────┙ 
            
            "
 }
function sukses () {
 echo -e $Y "


                    ╔────────────────────────────────────╗
                    |          Aplikasi berhasil         |
                    |              DI INSTALL            |  
                    ┖────────────────────────────────────┙ 
            
            "
 }
function adbwifi () {
    clear
    adb kill-server
    echo "      ================================="
    echo "      Your IP Address   = "$lanip
    echo "      ================================="
    sleep 2
    echo "      Your IP Target    = "$target
    echo "      ================================="
    sleep 2
    echo "      TCPIP 5555      "
    adb tcpip 5555
    echo "      Try Connect via WIFI "
    sleep 2 
 }

 # Delete ngrok file
function ngrokdel() {
    unzip ngrok.zip
    rm -rf ngrok.zip
 }

 # Check if offline
netcheck() {
    while true; do
        wget --spider --quiet https://github.com
        if [ "$?" != 0 ]; then
            echo -e "${error}No internet!\007\n"
            sleep 2
        else
            break
        fi
    done
 }

 # install ngrok & cloudflare
function tunnel() {
 if ! [[ -f $HOME/.ngrokfolder/ngrok && -f $HOME/.cffolder/cloudflared ]] ; then
    if ! [[ -d $HOME/.ngrokfolder ]]; then
        cd $HOME && mkdir .ngrokfolder
    fi
    if ! [[ -d $HOME/.cffolder ]]; then
        cd $HOME && mkdir .cffolder
    fi
    p=`uname -m`
    d=`uname`
    while true; do
        echo -e "\n${info}Downloading Tunnelers:\n"
        netcheck
        if [ -e ngrok.zip ];then
            rm -rf ngrok.zip
        fi
        cd "$cwd"
        if echo "$d" | grep -q "Darwin"; then
            if echo "$p" | grep -q "x86_64"; then
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-darwin-amd64.zip" -O "ngrok.zip"
                ngrokdel
                wget -q --show-progress "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-darwin-amd64.tgz" -O "cloudflared.tgz"
                tar -zxf cloudflared.tgz > /dev/null 2>&1
                rm -rf cloudflared.tgz
                break
            elif echo "$p" | grep -q "arm64"; then
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-arm64.zip" -O "ngrok.zip"
                ngrokdel
                echo -e "${error}Cloudflared not available for device architecture!"
                sleep 3
                break
            else
                echo -e "${error}Device architecture unknown. Download ngrok/cloudflared manually!"
                sleep 3
                break
            fi
        elif echo "$d" | grep -q "Linux"; then
            if echo "$p" | grep -q "aarch64"; then
                if [ -e ngrok-stable-linux-arm64.tgz ];then
                   rm -rf ngrok-stable-linux-arm64.tgz
                fi
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-linux-arm64.tgz" -O "ngrok.tgz"
                tar -zxf ngrok.tgz
                rm -rf ngrok.tgz
                wget -q --show-progress "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64" -O "cloudflared"
                break
            elif echo "$p" | grep -q "arm"; then
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-linux-arm.zip" -O "ngrok.zip"
                ngrokdel
                wget -q --show-progress 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm' -O "cloudflared"
                break
            elif echo "$p" | grep -q "x86_64"; then
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-linux-amd64.zip" -O "ngrok.zip"
                ngrokdel
                wget -q --show-progress 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64' -O "cloudflared"
                break
            else
                wget -q --show-progress "https://github.com/KasRoudra/files/raw/main/ngrok/ngrok-stable-linux-386.zip" -O "ngrok.zip"
                ngrokdel
                wget -q --show-progress "https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-386" -O "cloudflared"
                break
            fi
        else
            echo -e "${error}Unsupported Platform!"
            exit
        fi
    done
    sleep 1
    cd "$cwd"
    mv -f ngrok $HOME/.ngrokfolder
    mv -f cloudflared $HOME/.cffolder
    if $sudo; then
    sudo chmod +x $HOME/.ngrokfolder/ngrok
    sudo chmod +x $HOME/.cffolder/cloudflared
    else
    chmod +x $HOME/.ngrokfolder/ngrok
    chmod +x $HOME/.cffolder/cloudflared
    fi
 fi
 }

# MENU utama
    header
    read -p "    Select SERVER :~# " select
# SERVER START
    if [[ $select == 1 ]]; then
    clear
    home
     read -p "    Connect by :~# " select
     if [[ $select == 1 ]]; then
        clear
        echo "           Connecting via ip address....  "
        # spinlong
        clear
        ssh root@$ip 
        clear
        echo -e $R "


                      ╔────────────────────────────────────╗
                      |           DISCONNECTED             |  
                      ┖────────────────────────────────────┙ 
            
            "
        sleep 2
        clear
        menu

        elif [[ $select == 2 ]]; then
            clear
            echo "       Connecting via ngrok ...  "
           # spinlong
            clear
            ssh root@0.tcp.ap.ngrok.io -p $pssh
            clear
            echo -e $R "


                      ╔────────────────────────────────────╗
                      |           DISCONNECTED             |  
                      ┖────────────────────────────────────┙ 
            
    
			"
            sleep 2
            clear
            menu

        elif [[ $select == 3 ]]; then
            clear
            echo "           Connecting ADB via IP  ....  "
           # spinlong
            clear
            adb connect $ip:$p5555
            clear
            menu

        elif [[ $select == 4 ]]; then
            clear
            echo "          ADB Connecting via ngrok  "
           # spinlong
            clear
            adb connect $tcp
            clear
            menu
        else
        clear
        echo -e $R "


                      ╔────────────────────────────────────╗
                      |             BACK TO MENU           |  
                      ┖────────────────────────────────────┙ 
            
            "
        sleep 1
        menu
        fi  
# adb   
    elif [[ $select == 2 ]]; then
    clear
 
    adbmenu
    read -p "    SSH @ DANCELL :~# " select
    if [[ $select == 1 ]]; then
     clear
     info
     sleep 5
     clear
     menu

    elif [[ $select == 2 ]]; then
     clear
     adbwifi
     adb connect $target:5555
     echo -e $Y "
                    ╔────────────────────────────────────╗
                    |              Berhasil              |
                    |        Connected =$target    |  
                    ┖────────────────────────────────────┙ "
	 sleep 3
	 clear
     menu

    elif [[ $select == 3 ]]; then
     clear
     kosong
	 sleep 1
	 clear
     menu

    elif [[ $select == 4 ]]; then
     clear
	 sleep 1
	echo "Apakah Anda Ingin Backup Foto Camera "
	echo $R"     Ctrl+c to Cancel  " $C
	 sleep 10
     adb pull /sdcard/DCIM/Camera ~/backup
	 sleep 1
	 clear
     menu

    elif [[ $select == 5 ]]; then
     scrcpy
     echo -e $R "


                      ╔────────────────────────────────────╗
                      |             ADB TERPUTUS           |  
                      ┖────────────────────────────────────┙ 
            
            "
	 sleep 2
	 clear
     menu

    elif [[ $select == 6 ]]; then
     clear
     echo -e $R "


                      ╔────────────────────────────────────╗
                      |             ADB TERPUTUS           |  
                      ┖────────────────────────────────────┙ 
            
            "

	 sleep 2
     adb kill-server
	 clear
     menu


    else
    clear
    echo -e $R "


                  ╔────────────────────────────────────╗
                  |             BACK TO MENU           |  
                  ┖────────────────────────────────────┙ 
            
            "
    sleep 1
    menu
    fi
# FASTBOOT  
    elif [[ $select == 3 ]]; then
    clear
 
    fastmode
    read -p "    Pilih MODE :~# " select
    if [[ $select == 1 ]]; then
     clear
     kosong
     sleep 1
     clear
     menu

    elif [[ $select == 2 ]]; then
     clear
     kosong
	 sleep 1
	 clear
     menu

    elif [[ $select == 3 ]]; then
     clear
     kosong
	 sleep 1
	 clear
     menu

    else
    clear
    back
    sleep 1
    menu
    fi


# LINUX 
    elif [[ $select == 4 ]]; then
    clear
    LINUX
    read -p "    Pilihan :~# " select
    if [[ $select == 1 ]]; then
     clear
     #Install app
    echo $G"Installing java"
    sleep 2
    sudo apt update
    sudo apt install default-jre \
		 ffmpeg libsdl2-2.0-0 adb wget \
		gcc git pkg-config meson ninja-build libsdl2-dev \
                libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \
                libswresample-dev libusb-1.0-0 libusb-1.0-0-dev make -y 
    sudo apt install adb fastboot nmap htop terminator curl wget git -y
    clear
    sukses
    sleep 2
    clear
    menu

    elif [[ $select == 2 ]]; then
     clear
     echo $B"Install scrcpy"
     sleep 1
     git clone https://github.com/Genymobile/scrcpy
     cd scrcpy
     ./install_release.sh
     cd
     sleep 1
     rm -r scrcpy
     clear
     sukses
     sleep 1.5
     menu

    elif [[ $select == 3 ]]; then
     clear
     echo $R"Install wine"
     sleep 1
     sudo dpkg --add-architecture i386
     sudo mkdir -pm755 /etc/apt/keyrings
     sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
     sudo apt update
     sudo apt install wine -y
     clear
     sukses
     sleep 1.5
	 clear
     menu

    elif [[ $select == 4 ]]; then
     clear
     echo $C "Install zphisher"
     sleep 1
     cd ~
     wget https://download1478.mediafire.com/gvwsf3unx6pg8XRBA0QsQkN3lN5X0t1lbEncd6f3WO6VxQgv97mTRDOR188E4JICC2PB0oxYcMzpLLJl77CxWhBZPXlcTLuJtDBDjFWxpALiX3OkPtpCr8gZrfWEu-4vHXYJNFqE2oUUkjdFUhCiT1ARdTcQMnzyes-jnWhe2L6l574X/tw35l1lej004iu5/zphisher_2.3.5_all.deb
     clear
     sudo dpkg -i zphisher_2.3.5_all.deb
     clear
     sukses
     sleep 1.5
     menu

    elif [[ $select == 5 ]]; then
     clear
     echo $Y "Install chrome"
     sleep 1.5
     cd ~
     wget https://download1980.mediafire.com/624bhcx7gaygopPA3SsIncRZRJ5fU66tewmlhdhXpRix3iFQxHJuWyAUFb8z2c6s11l9apgUnDaXyU3x8vo2TdW1LJZ6a-gjJ5gvOLltaAtEpmj-MvWV9gYn4jONMGzXgKPnXTchFerzLM_AfMk7wUKvY5MLMlXEXxFv3D6xnHL__ZVZ/c02zjizsy9sqmr0/google-chrome-stable_current_amd64.deb
     clear
     sudo dpkg -i google-chrome-stable_current_amd64.deb
     clear
     sukses
     sleep2
     menu

    elif [[ $select == 6 ]]; then
     clear
     tunnel
     sleep 1
     sukses
     sleep 2
     menu

    else
     clear
     back
     sleep 1
     menu
    fi


# Phishing
    elif [[ $select == 5 ]]; then
    clear
    PHISHING
    read -p "   Pilih Metode :~# " select

        if [[ $select == 1 ]]; then
        clear
        zphisher
        sleep 1
        clear
        menu

        elif [[ $select == 2 ]]; then
        clear
        kosong
        sleep 2
        menu

        else
        clear
        back
        menu
        fi

# END
else
 clear
 back
  menu

fi
